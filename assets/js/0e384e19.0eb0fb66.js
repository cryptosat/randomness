"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],s={sidebar_position:1},i="Introduction",p={unversionedId:"intro",id:"intro",title:"Introduction",description:"Cryptosat Randomness Beacon generates 32 byte randomness and stores it on a",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/randomness/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Get Randomness",permalink:"/randomness/docs/deploy"}},c={},u=[{value:"Getting Started",id:"getting-started",level:2},{value:"Setup MetaMask",id:"setup-metamask",level:3},{value:"Acquire Testnet VLX",id:"acquire-testnet-vlx",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Cryptosat Randomness Beacon generates 32 byte randomness and stores it on a\nsmart contract on ",(0,o.kt)("a",{parentName:"p",href:"https://velas.com/"},"Velas")," blockchain. This tutorial will\nguide you through how to retrieve and verify randomness generated by Cryptosat."),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"You'll need below tools to follow this tutorial."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://remix.ethereum.org/"},"The Remix IDE")," or any Solidity development environment"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://metamask.io/"},"MetaMask")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://velas.com/"},"Velas")," wallet and Velas testnet VLX")),(0,o.kt)("h3",{id:"setup-metamask"},"Setup MetaMask"),(0,o.kt)("p",null,"To deploy a smart contract on any blockchain, you need a wallet and corresponding\ntoken to pay for the fee."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://metamask.io/download/"},"Install MetaMask")," browser extension.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open MetaMask and follow the instruction to setup a new account. Copy your\nsecret recovery phrase into a secure location. You need this to access your\nwalllet later.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure MetaMask for Velas Network following ",(0,o.kt)("a",{parentName:"p",href:"https://support.velas.com/hc/en-150/articles/4405102780818-How-To-Configure-MetaMask-for-Velas-Network-RPC"},"this article"),"."))),(0,o.kt)("h3",{id:"acquire-testnet-vlx"},"Acquire Testnet VLX"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://docs.velas.com/cli/install-velas-cli-tools"},"Install Velas CLI"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://docs.velas.com/wallet-guide/file-system-wallet"},"Generate a Velas Wallet")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/my-velas-wallet\nvelas-keygen new --outfile ~/my-velas-wallet/my-keypair.json\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Airdrop some tokens to your wallet")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"velas airdrop 10 <RECIPIENT_ACCOUNT_ADDRESS> --url https://explorer.testnet.velas.com/rpc\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<RECIPIENT_ACCOUNT_ADDRESS>")," with your base58 encoded public key address."),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Transfer Velas Native coin to Velas EVM with ",(0,o.kt)("a",{parentName:"li",href:"https://docs.velas.com/evm/#transfer-native-token-to-evm"},"evm-utils"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"velas evm transfer-to-evm -k ~/my-velas-wallet/my-keypair.json <VELAS_EVM_ADDRESS> <AMOUNT>\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<VELAS_EVM_ADDRES>")," will be the public address of your MetaMask wallet."))}d.isMDXComponent=!0}}]);